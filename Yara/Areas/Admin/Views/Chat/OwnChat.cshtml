@model ViewmMODeElMASTER
@{
    ViewData["Title"] = "OwnChat";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<!-- Admin View: chat-admin.html -->
<!DOCTYPE html>
<html>
<head>
    <title>Admin Chat</title>
</head>
<body>

    <h2>Admin Chat</h2>
    <hr />
    <img src="@Helper.PathImageuser@ViewBag.img" style="width:50px; height:50px; border-radius: 50%;" />
    <label id="userName">@Context.User.Identity.Name</label>
    
    <hr />
    <div id="messagesList">

        @{
            foreach(var item in Model.ViewChatMessage)
            {
                <li>@item.Message : @item.MessageeTime </li>
            }
        }
    </div>
    <hr />
    <br/>
    <input type="text" id="messageInput1" placeholder="Type a message" />
    <br />
    <input type="text" id="sendTo" placeholder="send to ...." />
    <br />
    <button id="sendButton" onclick="sendMessage()">Send</button>
    <br />
    <br />
    <hr />

    <script>
        connection.on("ReceiveMessage", function (user, message, time) {
            const msg = `${user}: ${message} (${time}) `;
            const li = document.createElement("li");
            li.textContent = msg;
            document.getElementById("messagesList").appendChild(li);
        });


        function sendMessage(){
            const message = document.getElementById("messageInput1").value;
            const to = document.getElementById("sendTo").value;
            document.getElementById("messageInput1").value = "";
            document.getElementById("sendTo").value = "";

            const user = document.getElementById("userName").textContent;
            const msg = `${user}: ${message}`;
            const li = document.createElement("li");
            li.textContent = msg;
            document.getElementById("messagesList").appendChild(li);

            connection.invoke("SendMessageToClients", message, to).catch(function (err) {
                return console.error(err.toString());
            });
        }

        connection.on("UserDisconnected", function (userName) {
            removeUserFromList(userName);
        });

        window.onload = function() {
            const user = document.getElementById("userName").textContent;
            connection.invoke("MarkMessagesAsRead", user).catch(function (err) {
                return console.error(err.toString());
            });
        }


    </script>
</body>
</html>


