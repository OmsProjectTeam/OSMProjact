@model ViewmMODeElMASTER
@{
    ViewData["Title"] = "Chat";
    Layout = "~/Areas/ClintAccount/Views/Shared/_LayoutClint.cshtml";
}
<h4>Client Chat</h4>
<img src="@Helper.PathImageuser@ViewBag.img" style="width:30px; height:30px; border-radius: 50%;" />
<label id="userName">@Context.User.Identity.Name</label>
<div class="col-xs-12" style="margin:5px; width:100vw;">

    <div id="messagesList" style="width: 70%; max-height: 400px; padding:5px; border: groove 1px black; border-radius: 8px; overflow-y: auto;">
        @Html.Partial("RefreshCl", Model)
    </div>
    <hr />

    <div class="row" style="width:90%; border-radius:8px; border-top: 1px solid #ccc; background-color: #f1f1f1; padding: 10px; display: flex; flex-direction:row;">
        <input type="text" style="border-radius:8px; width:80%; margin-left:10px" id="messageInput1" placeholder="Type a message" />

        <input type="file" style="border-radius:50%; width:30px; height:100%; margin-left:10px" id="ImgSend" placeholder="Type a message" />

        <br />
        <input type="text" style="display:none;" hidden id="sendTo" value="@ViewBag.another" placeholder="send to ...." />
        <br />
        <button style="background-color:aqua; border-radius:50%; width:40px;" id="sendButton" onclick="sendMessage()"><</button>
    </div>
</div>

@section Scripts1 {
    <script src="~/js/signalr.min.js"></script>
    @* <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.11/signalr.min.js"></script> *@
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>


}

@section Scripts {
    <script type="text/javascript">

        connection.on("ReceiveMessageFromAdmin", function (user, message, pathImg, time) {
            console.log("done...in admin sent a Message");
            refreshMessagesListForAdmin();
            refreshMessagesList();
        });

        async function sendMessage() {
            const message = document.getElementById("messageInput1").value;
            const to = document.getElementById("sendTo").value;
            const fileInput = document.getElementById("ImgSend");
            const file = fileInput.files[0];

            let filePath = null;
            if (file) {
                try {
                    filePath = await uploadFile(file);
                } catch (error) {
                    console.error("Error uploading file:", error);
                    return;
                }
            }

            document.getElementById("messageInput1").value = "";
            fileInput.value = "";
            connection.invoke("SendMessageToAdmin", message, to, filePath)
                .then(function () {
                    console.log("Send Message To Admin successfully");
                    refreshMessagesList();
                    scrollToBottom();
                }).catch(function (err) {
                    console.error("Error sending message:", err.toString());
                });
        }

        async function uploadFile(file) {
            const formData = new FormData();
            formData.append("file", file);

            const response = await fetch("/ClintAccount/Chat/UploadFile", {
                method: "POST",
                body: formData
            });

            if (response.ok) {
                const data = await response.json();
                return data.filePath;
            } else {
                throw new Error("File upload failed");
            }
        }

        connection.on("UserDisconnected", function (userName) {
            console.log(`${userName} disconnected`);
        });

        window.onload = function () {
            const user = document.getElementById("userName").textContent;
            connection.invoke("MarkMessagesAsRead", user).catch(function (err) {
                console.error("Error marking messages as read:", err.toString());
            });
        }

        async function refreshMessagesList() {
            const anotherId = '@ViewBag.anotherId';

            try {
                const response = await fetch(`/ClintAccount/Chat/Refresh/${anotherId}`, {
                    method: 'GET'
                });

                if (!response.ok) {
                    throw new Error('Network response was not ok ' + response.statusText);
                }

                const html = await response.text();
                console.log(html);
                document.getElementById('messagesList').innerHTML = html;
            } catch (error) {
                console.error("Error fetching messages:", error);
            }
        }

        async function refreshMessagesListForAdmin() {
            const MyId = '@ViewBag.MyId';

            try {
                const response = await fetch(`/Admin/Chat/OwnChat/?anotherId=${MyId}`, {
                    method: 'GET'
                });

                if (!response.ok) {
                    throw new Error('Network response was not ok ' + response.statusText);
                }

                const data = await response.text();
                location.reload();
            } catch (error) {
                console.error("Error fetching messages:", error);
            }
        }


        function loadChatFromLocalStorage() {
            const chatContainer = document.getElementById("messagesList");
            const chatContent = localStorage.getItem("chatContent");
            if (chatContent) {
                chatContainer.innerHTML = chatContainer.innerHTML + chatContent;
            }
        }

        function scrollToBottom() {
            const messagesList = document.getElementById("messagesList");
            messagesList.scrollTop = messagesList.scrollHeight;
        }

        window.onload = loadChatFromLocalStorage;
        window.onload = scrollToBottom();
    </script>
}

